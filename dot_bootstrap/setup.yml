---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.apt:
        name:
          - alacritty
          - git
          - htop
          - vim
          - gcc
          - zsh
          - tmux
          - ffmpeg-free
          - make
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Add Brave Browser Key
      ansible.builtin.get_url:
        url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg
        mode: '0644'

    - name: Add Brave Browser Repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"
        state: present

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Brave Browser
      ansible.builtin.apt:
        name: brave-browser
        state: present

    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: true

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: >
          deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_env.SUDO_USER or ansible_user_id }}"
        groups: docker
        append: true

    - name: Install Snap package manager
      ansible.builtin.apt:
        name: snapd
        state: present

    - name: Install Discord via Snap
      community.general.snap:
        name: discord
        state: present

    - name: Install Postman via Snap
      community.general.snap:
        name: postman
        state: present

    - name: Install DBeaver CE via Snap
      community.general.snap:
        name: dbeaver-ce
        state: present

    # Font Installation Tasks
    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if FiraCode exists
      ansible.builtin.stat:
        path: "~{{ remote_regular_user }}/.fonts/FiraCode"
      register: firacode_exists
      changed_when: false

    - name: Download FiraCode
      when: firacode_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"
